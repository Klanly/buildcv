name: tfdml

on:
  workflow_dispatch:
    inputs:
      opencv-version:
        description: The version of OpenCV
        required: true
        default: 4.5.2

jobs:
  opencv:
    strategy:
      matrix:
        include:
          - name: windows_amd64
            os: windows-latest

    name: "tensorflow-directml ${{ matrix.name }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: true

    env:
      VERSION: ${{ github.event.inputs.opencv-version }}
      SRC: ${{ github.workspace }}/tensorflow-directml
      BUILD: ${{ github.workspace }}/build
      CONFIGURE: >-
        -D CMAKE_BUILD_TYPE=Release
        
      EXTRA_CONFIGURE: ${{ matrix.EXTRA_CONFIGURE }}

    steps:
      - uses: actions/checkout@v2
        with:
          repository: microsoft/tensorflow-directml
          path: ${{ env.SRC }}

      - name: Configure
        run: |
          $Architecture, $Configuration, $PyVersion = $Matches[1..3]
          Write-Host "Architecture = '$Architecture'"
          Write-Host "##vso[task.setVariable variable=architecture;isOutput=true]$Architecture"
          Write-Host "Configuration = '$Configuration'"
          Write-Host "##vso[task.setVariable variable=configuration;isOutput=true]$Configuration"
          
          Write-Host "PyVersion = '$PyVersion'"
          Write-Host "##vso[task.setVariable variable=pyVersion;isOutput=true]$PyVersion"
          
          $PyVersionMajorDotMinor = $PyVersion[2] + '.' + $PyVersion[3]
          Write-Host "PyVersionMajorDotMinor = '$PyVersionMajorDotMinor'"
          Write-Host "##vso[task.setVariable variable=pyVersionMajorDotMinor;isOutput=true]$PyVersionMajorDotMinor"

      - name: List build options
        working-directory: ${{ env.BUILD }}
        run: |
          cmake -LA ${{ env.SRC }}

      - name: Build
        working-directory: ${{ env.BUILD }}
        run: |
          cmake --build . --target install --config Release
          7z a ${{ env.BUILD }}/install/py.7z C:/hostedtoolcache/windows/Python/3.7.9/x64/Lib/site-packages/cv2

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.job }}-${{ env.VERSION }}-${{ matrix.name }}
          path: ${{ env.BUILD }}/install
            
